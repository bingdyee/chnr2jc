package ${table.controller_pkg};

import ${project.base_pkg}.common.bean.Pages;
import ${table.dto_pkg}.${table.entity_name}DTO;
import ${table.query_pkg}.${table.entity_name}Query;
import ${table.vo_pkg}.${table.entity_name}VO;
import ${table.service_pkg}.${table.entity_name}Service;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;

import javax.validation.Valid;
import java.util.List;

 /**
 * ${table.comment}控制层
 *
 * @author ${project.author}
 * @since ${project.since}
 */
@Api(tags = "${table.comment}")
@RestController
@RequestMapping("/${module.name}/${table.prop_name}")
public class ${table.controller_clz} {

    private final ${table.service_clz} ${table.service_prop_name};

    public ${table.controller_clz}(${table.service_clz} ${table.service_prop_name}) {
        this.${table.service_prop_name} = ${table.service_prop_name};
    }

    @ApiOperation("新增${table.comment}")
    @PostMapping("/createBean")
    public int create(@RequestBody @Valid ${table.vo_clz} ${table.prop_name}) {
        return this.${table.service_prop_name}.create(${table.prop_name});
    }

    @ApiOperation("删除${table.comment}")
    @DeleteMapping("/removeBean")
    public int remove(List<Long> ids) {
        return this.${table.service_prop_name}.remove(ids);
    }

    @ApiOperation("修改${table.comment}")
    @PutMapping("/updateBean")
    public int modify(${table.vo_clz} ${table.prop_name}) {
        return this.${table.service_prop_name}.update(${table.prop_name});
    }

    @ApiOperation("${table.comment}详情")
    @GetMapping("/detailBean")
    public ${table.dto_clz} detail(Long id) {
        return this.${table.service_prop_name}.detail(id);
    }

    @ApiOperation("分页查询${table.comment}")
    @GetMapping("/filterList")
    public Pages<${table.dto_clz}> queryPage(${table.query_clz} query) {
        return this.${table.service_prop_name}.queryPage(query);
    }

}
